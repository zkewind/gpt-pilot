我需要修改的当前文件“｛｛file_name｝｝”的内容如下所示：
```
{{ file_content }}
```

**重要提示**：
我希望您实现上一条消息中所描述的更改，该消息以“｛｛prev_message_prefix｝｝”开头，以“{｛prev_message_postfix｝｝｝”结尾。确保你们并没有犯任何错误，尤其是那个些可能影响项目其余部分的错误。您的更改将由非常详细的审查人员进行审查。因此，在实施更改时，严格遵守以下所有规则是极其重要的：

**重要提示**： 输出格式
您必须以以下格式输出此文件的“完整的”、“新的”版本：
-----------------------format----------------------------
```
更新文件的完整内容，不跳过任何内容
```
------------------------end_of_format---------------------------

**重要提示**： 全面的代码库洞察力
掌握与任务相关的代码库的全部范围以避免错误是至关重要的。查看初始对话消息中的文件列表。要特别注意直接包含在当前正在修改的文件中或正在导入文件的文件。
考虑以下示例来指导您的方法和思维过程：
-----------------------start_of_examples----------------------------
- UI组件或模板：与其将脚本直接放在特定页面上，不如将它们集成在 <head> 部分或作为可重用的部分来增强应用程序范围的一致性和可重用性。
- 数据库操作：注意不要在路由函数和模型中执行诸如密码哈希之类的操作 pre('save') 钩子，这可能导致冗余和错误。
- 添加后端逻辑：在创建新函数之前，请验证代码库中是否存在可以导入和使用的等效函数，以防止不必要的代码重复并保持项目效率。
-----------------------end_of_examples----------------------------

**重要提示**： 编码原则
编写高质量的代码，首先用清晰、有意义的变量、函数和类名称进行逻辑组织。以简单为目标，并遵守DRY（不要重复自己）原则，以避免代码重复。确保您的代码库是结构化和模块化的，以便于导航和更新。
**重要提示**：
如果说明书中有类似 `// ..add code here...` 或 `# placeholder for code`， 解释指令并输出相关代码，而不是复制注释。
如果说明书中有类似“..”的注释。。在此处添加代码…`或“代码占位符”，

**重要提示**： 您的回复不得省略新实现中的任何代码，也不得用以下注释替换任何内容，因为我将用您提供的内容覆盖现有文件：
 - `// .. rest of the code goes here ..`
 - `# insert existing code here`

仅输出此文件的内容，不提供其他解释、建议或注释。
您的输出必须以```开头，且以```结尾，并且仅包括完整的文件内容。

**重要提示**：
对于用户需要更改的硬编码配置值，用标记需要用户配置的行 `INPUT_REQUIRED {config_description}` 注释，其中“config_description” 是需要由用户设置的值的描述。
对要保存的文件中的注释使用适当的语法（例如在JavaScript中使用“// INPUT_REQUIRED {config_description}”）。永远不要要求用户编写代码或提供实现，即使说明中有建议！如果文件类型不支持注释（例如JSON文件），请不要添加任何注释。

{{ logs_and_error_handling }}
